{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to vocabulary-explorer vocabulary-explorer Vocabulary Explorer (ALTLab, U of A) Languages and Tools: Project description ALTLab's vocabulary explorer is a way to explore information based on semantic class, or general meaning group. It is based off of the RapidWords semantic classification. The explorer allows users to expand or collapse different semantic classes through the form of a tree in order to see which word(s) fall under that category, and the relationships between categories. It also links to Itw\u00eawina, ALTLab's Plains Cree dictionary in order to show paradigms when appropriate. Users will primarily be linguists and language learners. The explorer will present itself as an interactive graph with nodes that users can click on to expand a section further and gain more information. Graph nodes will be grouped based on semantic class and get more specific as the user clicks through. Each node will also display the word(s) we have in our dictionary that belong to that semantic class. Definitions can be linked at the word-level and direct the user to itw\u00eawina. Frontend Deployment: Visit our auto-deployed website. MKdocs documentation: Visit our auto-deployed online documentation. Video Demo: Click here watch on Google drive. Test Report To view the test report, click here . Docker instructions docker compose up In the root directory, use the docker-compose.yml to trigger the deployment. Open http://localhost:8080 to view it in your browser. Installation & Usage instructions In the project directory, you can run: first do cd frontend & npm install --force npm start Runs the app in the development mode. Open http://localhost:3000 to view it in your browser. The page will reload when you make changes. You may also see any lint errors in the console. npm test Launches the test runner in the interactive watch mode. See the section about running tests for more information. npm run build Builds the app for production to the build folder. It correctly bundles React in production mode and optimizes the build for the best performance. The build is minified and the filenames include the hashes. Your app is ready to be deployed! See the section about deployment for more information. npm run eject Note: this is a one-way operation. Once you eject , you can't go back! If you aren't satisfied with the build tool and configuration choices, you can eject at any time. This command will remove the single build dependency from your project. Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except eject will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own. You don't have to ever use eject . The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it. Open-source Projects UAlbertaALTLab 21st century tools for Indigenous languages User can search English and Cree words User can get information and pronunciation for each words. RapidWords A web-based tool for text summarization and keyword extraction. The website offers a user-friendly interface and allows users to upload documents or paste text directly into the website for summarization. WordNet A lexical database for the English language, developed by Princeton University. It organizes words into sets of synonyms and organizes them into semantic hierarchies, allowing for a better understanding of how words are related semantically. The website provides a user-friendly interface for accessing and exploring the WordNet database, allowing users to search for words and their definitions, synonyms, and related concepts. Itw\u00eawina A web-based platform for learning Cree, an indigenous language of Canada. The platform offers interactive lessons and exercises to help users learn the basics of Cree, including vocabulary, grammar, and pronunciation. It also features a variety of resources, including audio recordings, to help users improve their listening and speaking skills in the language. Developer Team Member Name CCID Sooraj Arakkal arakkals Ke Li kli1 Matthew Shocrylas shocryla Jaden Huang sxhuang Yu Liu yliu30 Saba Gul gul Technical Resources Frontend: React.js + D3.js React JS documentation D3 documentation Backend: Django + SQLite3 Django Documentation SQLite3 Documentation Deployment: Docker + NGINX Docker Documentation NGINX Documentation","title":"Welcome to vocabulary-explorer"},{"location":"#welcome-to-vocabulary-explorer","text":"","title":"Welcome to vocabulary-explorer"},{"location":"#vocabulary-explorer","text":"Vocabulary Explorer (ALTLab, U of A)","title":"vocabulary-explorer"},{"location":"#project-description","text":"ALTLab's vocabulary explorer is a way to explore information based on semantic class, or general meaning group. It is based off of the RapidWords semantic classification. The explorer allows users to expand or collapse different semantic classes through the form of a tree in order to see which word(s) fall under that category, and the relationships between categories. It also links to Itw\u00eawina, ALTLab's Plains Cree dictionary in order to show paradigms when appropriate. Users will primarily be linguists and language learners. The explorer will present itself as an interactive graph with nodes that users can click on to expand a section further and gain more information. Graph nodes will be grouped based on semantic class and get more specific as the user clicks through. Each node will also display the word(s) we have in our dictionary that belong to that semantic class. Definitions can be linked at the word-level and direct the user to itw\u00eawina.","title":"Project description"},{"location":"#frontend-deployment","text":"Visit our auto-deployed website.","title":"Frontend Deployment:"},{"location":"#mkdocs-documentation","text":"Visit our auto-deployed online documentation.","title":"MKdocs documentation:"},{"location":"#video-demo","text":"Click here watch on Google drive.","title":"Video Demo:"},{"location":"#test-report","text":"To view the test report, click here .","title":"Test Report"},{"location":"#docker-instructions","text":"","title":"Docker instructions"},{"location":"#docker-compose-up","text":"In the root directory, use the docker-compose.yml to trigger the deployment. Open http://localhost:8080 to view it in your browser.","title":"docker compose up"},{"location":"#installation-usage-instructions","text":"In the project directory, you can run: first do cd frontend & npm install --force","title":"Installation &amp; Usage instructions"},{"location":"#npm-start","text":"Runs the app in the development mode. Open http://localhost:3000 to view it in your browser. The page will reload when you make changes. You may also see any lint errors in the console.","title":"npm start"},{"location":"#npm-test","text":"Launches the test runner in the interactive watch mode. See the section about running tests for more information.","title":"npm test"},{"location":"#npm-run-build","text":"Builds the app for production to the build folder. It correctly bundles React in production mode and optimizes the build for the best performance. The build is minified and the filenames include the hashes. Your app is ready to be deployed! See the section about deployment for more information.","title":"npm run build"},{"location":"#npm-run-eject","text":"Note: this is a one-way operation. Once you eject , you can't go back! If you aren't satisfied with the build tool and configuration choices, you can eject at any time. This command will remove the single build dependency from your project. Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except eject will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own. You don't have to ever use eject . The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.","title":"npm run eject"},{"location":"#open-source-projects","text":"","title":"Open-source Projects"},{"location":"#ualbertaaltlab","text":"21st century tools for Indigenous languages User can search English and Cree words User can get information and pronunciation for each words.","title":"UAlbertaALTLab"},{"location":"#rapidwords","text":"A web-based tool for text summarization and keyword extraction. The website offers a user-friendly interface and allows users to upload documents or paste text directly into the website for summarization.","title":"RapidWords"},{"location":"#wordnet","text":"A lexical database for the English language, developed by Princeton University. It organizes words into sets of synonyms and organizes them into semantic hierarchies, allowing for a better understanding of how words are related semantically. The website provides a user-friendly interface for accessing and exploring the WordNet database, allowing users to search for words and their definitions, synonyms, and related concepts.","title":"WordNet"},{"location":"#itwewina","text":"A web-based platform for learning Cree, an indigenous language of Canada. The platform offers interactive lessons and exercises to help users learn the basics of Cree, including vocabulary, grammar, and pronunciation. It also features a variety of resources, including audio recordings, to help users improve their listening and speaking skills in the language.","title":"Itw\u00eawina"},{"location":"#developer-team","text":"Member Name CCID Sooraj Arakkal arakkals Ke Li kli1 Matthew Shocrylas shocryla Jaden Huang sxhuang Yu Liu yliu30 Saba Gul gul","title":"Developer Team"},{"location":"#technical-resources","text":"","title":"Technical Resources"},{"location":"#frontend-reactjs-d3js","text":"React JS documentation D3 documentation","title":"Frontend: React.js + D3.js"},{"location":"#backend-django-sqlite3","text":"Django Documentation SQLite3 Documentation","title":"Backend: Django + SQLite3"},{"location":"#deployment-docker-nginx","text":"Docker Documentation NGINX Documentation","title":"Deployment: Docker + NGINX"},{"location":"FinalDocumentation/","text":"Final Documentation Deployment instructions Deploying the platform requires one instance, just frontend. It requires docker installed. Frontend Requirments Docker Github actions running the Deploy static CI Have the credentials in the project repo STEP BY STEP Git clone the repository and make sure you are in the main branch. > git clone https://github.com/UAlberta-CMPUT401/vocabulary-explorer.git Username: # Enter credentials Change your current directory to vocabulary-explorer > cd vocabulary-explorer Make sure your Docker installed and running with the system Build Docker image by using docker compose up . The image should be running on port 8080. > docker compose up Open http://localhost:8080 to view it in your browser. Clients use Nginx to deploy the docker image to their own server, please contact the ALTlab's backend developer Jolene (jcpoulin@ualberta.ca) for further details. Backend Since we are only responsible for developing the frontend page, the backend endpoints are maintained by the client. Please contact ALTlab for further backend deployment details. Here are the API endpoints that we used in this project: GET https://api.itwewina.altlab.dev/api/search/ Query Parameters: - name (ex: atim) - rw_index (ex: 6.3.1.5.1) - rw_domain (ex: dog) GET https://api.itwewina.altlab.dev/api/rapidwords/ Query Parameters: - q (ex: 1.2.2) Detailed endpoint documentation made by ALTLab can be found here . User manual Open the User Manual here: User Manual Design principles and future development ideas Click here to see the Design principles. Job description Front End Web Developer: Looking for a front end developer to work on ALTLab\u2019s vocabulary explorer, a web application which allows users to visualize, through tree/graph, the relationships between words within the Plains Cree vocabulary, through linguistic semantic domain classification. Check out the current site here: https://semanticexplorer.altlab.dev/ Responsibilities Maintain and improve existing Javascript codebase Understand the needs of users to determine design choices, especially as related to the tree/graph Develop new features to improve user experience Write unit, integration, and UI tests Technical requirements Experience with web development, HTML, CSS, and Javascript, specifically with React.js and D3.js Understanding of handling API responses Experience with deployment using Docker Experience writing effective tests, specifically utilizing JUnit and Cypress","title":"Final Documentation"},{"location":"FinalDocumentation/#final-documentation","text":"","title":"Final Documentation"},{"location":"FinalDocumentation/#deployment-instructions","text":"Deploying the platform requires one instance, just frontend. It requires docker installed.","title":"Deployment instructions"},{"location":"FinalDocumentation/#frontend","text":"Requirments Docker Github actions running the Deploy static CI Have the credentials in the project repo","title":"Frontend"},{"location":"FinalDocumentation/#step-by-step","text":"Git clone the repository and make sure you are in the main branch. > git clone https://github.com/UAlberta-CMPUT401/vocabulary-explorer.git Username: # Enter credentials Change your current directory to vocabulary-explorer > cd vocabulary-explorer Make sure your Docker installed and running with the system Build Docker image by using docker compose up . The image should be running on port 8080. > docker compose up Open http://localhost:8080 to view it in your browser. Clients use Nginx to deploy the docker image to their own server, please contact the ALTlab's backend developer Jolene (jcpoulin@ualberta.ca) for further details.","title":"STEP BY STEP"},{"location":"FinalDocumentation/#backend","text":"Since we are only responsible for developing the frontend page, the backend endpoints are maintained by the client. Please contact ALTlab for further backend deployment details. Here are the API endpoints that we used in this project: GET https://api.itwewina.altlab.dev/api/search/ Query Parameters: - name (ex: atim) - rw_index (ex: 6.3.1.5.1) - rw_domain (ex: dog) GET https://api.itwewina.altlab.dev/api/rapidwords/ Query Parameters: - q (ex: 1.2.2) Detailed endpoint documentation made by ALTLab can be found here .","title":"Backend"},{"location":"FinalDocumentation/#user-manual","text":"Open the User Manual here: User Manual","title":"User manual"},{"location":"FinalDocumentation/#design-principles-and-future-development-ideas","text":"Click here to see the Design principles.","title":"Design principles and future development ideas"},{"location":"FinalDocumentation/#job-description","text":"","title":"Job description"},{"location":"FinalDocumentation/#front-end-web-developer","text":"Looking for a front end developer to work on ALTLab\u2019s vocabulary explorer, a web application which allows users to visualize, through tree/graph, the relationships between words within the Plains Cree vocabulary, through linguistic semantic domain classification. Check out the current site here: https://semanticexplorer.altlab.dev/ Responsibilities Maintain and improve existing Javascript codebase Understand the needs of users to determine design choices, especially as related to the tree/graph Develop new features to improve user experience Write unit, integration, and UI tests Technical requirements Experience with web development, HTML, CSS, and Javascript, specifically with React.js and D3.js Understanding of handling API responses Experience with deployment using Docker Experience writing effective tests, specifically utilizing JUnit and Cypress","title":"Front End Web Developer:"},{"location":"ProjectManagement/","text":"Project Management This page provides a general overview of the assigned tasks and roles for the duration of five sprints (subject to change). Story Map Project Plan Sprint 1 Due: January 28 Tasks Task Related US Assigned To Due Date Project Requirements Document Documentation Damian Li & Yu Liu Jan 28 Software Design Document Documentation Matthew Shocrylas & Saba Gul Jan 28 Teamwork Document Documentation Jaden Huang Jan 28 Project Management Document Documentation Sooraj Arakkal Jan 28 Sprint 2 Due: February 11 User stories User Story Story Points SETUP - Setting up dev environment 3 US 1.1 - Querying 3 US 1.2 - Navigate to tree 5 US 3.1 - Filter search results 3 US 4.2 - Laptop 3 Estimated sprint velocity: 17 Tasks Task Related US Assigned To Due Date REST API communication SETUP Sooraj Feb 7 d3js installation SETUP Damian Feb 7 React app SETUP Sooraj Feb 7 Call search API with user search term US 1.1 Yu Feb 10 Create search UI US 1.1 Sooraj Feb 10 Create results page UI US 1.1 Saba Feb 10 Display search api response as results in result page US 1.1 Yu Feb 10 Initialize graph instance using d3 US 1.2 Matthew Feb 9 Link result word with graph instance US 1.2 Matthew Feb 9 Design node in graph UI US 1.2 Matthew Feb 10 Display selected word in graph UI US 1.2 Matthew Feb 10 Design tag components in result page US 3.1 Jaden Feb 11 Add tag functionality in result page US 3.1 Damian Feb 11 Research responsive frontend frameworks (MaterialUI) US 4.2 Jaden Feb 8 Implement and enfore usage of frontend framework US 4.2 Jaden Feb 8 Sprint 3 Due: March 4 User stories User Story Story Points US 2.1 - Expand hypernyms 3 US 2.2 - Expand hyponyms 3 US 2.4 - Move around tree 5 US 2.8 - Tree modes 5 US 4.3 - Tablet 5 Estimated sprint velocity: 21 Tasks Task Related US Assigned To Due Date Create develop branch and make it default DEVOPS Damian Feb 20 Communicate with client and make a deployment DEVOPS Damian Feb 20 Create a github workflow that deploys everytime code is pushed to main DEVOPS Damian Feb 20 Create \"Hypernyms\" button near node (right side) and popup list when button is clicked US 2.1 Sooraj Feb 20 Add functional checkbox beside each hypernym item in popup list US 2.1 Sooraj Feb 20 Call searchRW API when \"Hypernyms\" button clicked and populate response in popup list US 2.1 Matthew Feb 27 Create \"Hyponyms\" button near node (left side) and popup list when button is clicked US 2.2 Saba Feb 20 Add functional checkbox beside each hyponym item in popup list US 2.2 Saba Feb 20 Call searchRW API when \"Hyponyms\" button clicked and populate response in popup list US 2.2 Matthew Feb 27 Add zooming functionality and corresponding buttons for graph US 2.4 Damian Feb 25 Add focus button that takes user back to center of tree US 2.4 Damian Feb 25 Add functionality for user to drag and move around the map with restriction US 2.4 Damian Feb 25 Add flag for english mode/cree mode to be used for api calls and graph generation US 2.8 Yu Feb 25 Modify graph to show either modes depending on user selection US 2.8 Yu Feb 25 Test website on a tablet and make notes on missing features/usecases US 4.2 Jaden Feb 24 Suggest changes to make website more tablet friendly and review with team US 4.2 Jaden Feb 24 Assign yourself and other team members to make changes deemed doable US 4.2 Jaden Mar 1 Sprint 4 Due: March 18 User stories User Story Story Points US 2.3 Select from hypernyms/hyponyms 5 US 2.5 See node details 5 US 2.6 Node colors 2 US 3.2 Filter node list 3 US 3.3 Search node list 3 Estimated sprint velocity: 18 Tasks Task Related US Assigned To Due Date Add api urls to env and use jest mocking to mock url calls TEST Sooraj Mar 14 Improve test coverage of all code TEST Damian Mar 14 Update test report TEST Damian Mar 14 Improve Accessibility patterns in UI DEVOPS Saba Mar 15 Implement hypernym/hyponym buttons in each node US 2.3 Matthew Mar 15 Clicking the button opens a list of the hypernyms/hyponyms US 2.3 Jaden Mar 15 Able to select one or more of the list entries US 2.3 Saba Mar 15 Selections appear as nodes in the tree US 2.3 Sooraj Mar 15 Add ability to filter the list by word type i.e. noun, verb, etc. US 3.2 Jaden Mar 15 Add a search bar to the node list. US 3.3 Yu Mar 15 Ability to filter the rapidwords node cree words list itself US 3.3 Sooraj Mar 15 Ability to click on a cree word in an rapid words node, and have details about it appear in an overlay US 2.5 Saba Mar 17 Implement details in this overlay US 2.5 Matthew Mar 17 Ability to click on the domains in the details to be sent to graph of that domain, similar to results page US 2.5 Matthew Mar 17 Deploy frontend page to client's web server DEVOPS Damian Mar 18 Improve tree UX US 2.6 Everyone Mar 18 Improve visual design of the tree US 2.6 Everyone Mar 18 Delineate \u201cfocus\u201d node in a different color from other nodes US 2.6 Everyone Mar 18 Sprint 5 Due: April 4 User stories User Story Story Points US 4.1 Mobile phone 8 Homepage visual upgrade 5 End-to-end testing 5 Unit testing 3 Component testing 3 Quality of life updates and general visual upgrades 3 User testing, bug discovery and handling 3 Wordnet graph support (if backend is up) 5 Estimated sprint velocity: 35 Tasks Task Related US Assigned To Due Date Test website on a phone, assess usability and make a report US 4.1 Sooraj Mar 25 Suggest fixes and assign everyone tasks to make the website more responsive US 4.1 Saba Apr 1 Make homepage look less bland by adding user guide and/or expanding the search to entire page UI Matt Mar 25 Test user searching and entering tree page TEST Damian Apr 1 Test user interacting everything in tree page TEST Michael Mar 25 Test user interacting with everything in results page TEST Sooraj Mar 25 Write unit tests for API call functions TEST Saba Apr 1 Write unit tests for util functions TEST Matt Mar 25 Write unit tests for general functions TEST Damian Apr 1 Write component tests for all componentes TEST Michael Mar 25 Increase spacing between nodes in tree UI Jaden Apr 1 Make cree word generation button be center of the node list UI Sooraj Mar 25 Choose better color for level coloring for tree UI Saba Apr 1 Have consistent coloring for the entire website UI Matt Mar 25 Handle graphs page sometimes blowing up BUG Damian Mar 25 Write API functions for wordnet WN Matt Mar 25 Modify tree to work for wordnet API WN Jaden Apr 1","title":"Project Management"},{"location":"ProjectManagement/#project-management","text":"This page provides a general overview of the assigned tasks and roles for the duration of five sprints (subject to change).","title":"Project Management"},{"location":"ProjectManagement/#story-map","text":"","title":"Story Map"},{"location":"ProjectManagement/#project-plan","text":"","title":"Project Plan"},{"location":"ProjectManagement/#sprint-1","text":"Due: January 28","title":"Sprint 1"},{"location":"ProjectManagement/#tasks","text":"Task Related US Assigned To Due Date Project Requirements Document Documentation Damian Li & Yu Liu Jan 28 Software Design Document Documentation Matthew Shocrylas & Saba Gul Jan 28 Teamwork Document Documentation Jaden Huang Jan 28 Project Management Document Documentation Sooraj Arakkal Jan 28","title":"Tasks"},{"location":"ProjectManagement/#sprint-2","text":"Due: February 11","title":"Sprint 2"},{"location":"ProjectManagement/#user-stories","text":"User Story Story Points SETUP - Setting up dev environment 3 US 1.1 - Querying 3 US 1.2 - Navigate to tree 5 US 3.1 - Filter search results 3 US 4.2 - Laptop 3 Estimated sprint velocity: 17","title":"User stories"},{"location":"ProjectManagement/#tasks_1","text":"Task Related US Assigned To Due Date REST API communication SETUP Sooraj Feb 7 d3js installation SETUP Damian Feb 7 React app SETUP Sooraj Feb 7 Call search API with user search term US 1.1 Yu Feb 10 Create search UI US 1.1 Sooraj Feb 10 Create results page UI US 1.1 Saba Feb 10 Display search api response as results in result page US 1.1 Yu Feb 10 Initialize graph instance using d3 US 1.2 Matthew Feb 9 Link result word with graph instance US 1.2 Matthew Feb 9 Design node in graph UI US 1.2 Matthew Feb 10 Display selected word in graph UI US 1.2 Matthew Feb 10 Design tag components in result page US 3.1 Jaden Feb 11 Add tag functionality in result page US 3.1 Damian Feb 11 Research responsive frontend frameworks (MaterialUI) US 4.2 Jaden Feb 8 Implement and enfore usage of frontend framework US 4.2 Jaden Feb 8","title":"Tasks"},{"location":"ProjectManagement/#sprint-3","text":"Due: March 4","title":"Sprint 3"},{"location":"ProjectManagement/#user-stories_1","text":"User Story Story Points US 2.1 - Expand hypernyms 3 US 2.2 - Expand hyponyms 3 US 2.4 - Move around tree 5 US 2.8 - Tree modes 5 US 4.3 - Tablet 5 Estimated sprint velocity: 21","title":"User stories"},{"location":"ProjectManagement/#tasks_2","text":"Task Related US Assigned To Due Date Create develop branch and make it default DEVOPS Damian Feb 20 Communicate with client and make a deployment DEVOPS Damian Feb 20 Create a github workflow that deploys everytime code is pushed to main DEVOPS Damian Feb 20 Create \"Hypernyms\" button near node (right side) and popup list when button is clicked US 2.1 Sooraj Feb 20 Add functional checkbox beside each hypernym item in popup list US 2.1 Sooraj Feb 20 Call searchRW API when \"Hypernyms\" button clicked and populate response in popup list US 2.1 Matthew Feb 27 Create \"Hyponyms\" button near node (left side) and popup list when button is clicked US 2.2 Saba Feb 20 Add functional checkbox beside each hyponym item in popup list US 2.2 Saba Feb 20 Call searchRW API when \"Hyponyms\" button clicked and populate response in popup list US 2.2 Matthew Feb 27 Add zooming functionality and corresponding buttons for graph US 2.4 Damian Feb 25 Add focus button that takes user back to center of tree US 2.4 Damian Feb 25 Add functionality for user to drag and move around the map with restriction US 2.4 Damian Feb 25 Add flag for english mode/cree mode to be used for api calls and graph generation US 2.8 Yu Feb 25 Modify graph to show either modes depending on user selection US 2.8 Yu Feb 25 Test website on a tablet and make notes on missing features/usecases US 4.2 Jaden Feb 24 Suggest changes to make website more tablet friendly and review with team US 4.2 Jaden Feb 24 Assign yourself and other team members to make changes deemed doable US 4.2 Jaden Mar 1","title":"Tasks"},{"location":"ProjectManagement/#sprint-4","text":"Due: March 18","title":"Sprint 4"},{"location":"ProjectManagement/#user-stories_2","text":"User Story Story Points US 2.3 Select from hypernyms/hyponyms 5 US 2.5 See node details 5 US 2.6 Node colors 2 US 3.2 Filter node list 3 US 3.3 Search node list 3 Estimated sprint velocity: 18","title":"User stories"},{"location":"ProjectManagement/#tasks_3","text":"Task Related US Assigned To Due Date Add api urls to env and use jest mocking to mock url calls TEST Sooraj Mar 14 Improve test coverage of all code TEST Damian Mar 14 Update test report TEST Damian Mar 14 Improve Accessibility patterns in UI DEVOPS Saba Mar 15 Implement hypernym/hyponym buttons in each node US 2.3 Matthew Mar 15 Clicking the button opens a list of the hypernyms/hyponyms US 2.3 Jaden Mar 15 Able to select one or more of the list entries US 2.3 Saba Mar 15 Selections appear as nodes in the tree US 2.3 Sooraj Mar 15 Add ability to filter the list by word type i.e. noun, verb, etc. US 3.2 Jaden Mar 15 Add a search bar to the node list. US 3.3 Yu Mar 15 Ability to filter the rapidwords node cree words list itself US 3.3 Sooraj Mar 15 Ability to click on a cree word in an rapid words node, and have details about it appear in an overlay US 2.5 Saba Mar 17 Implement details in this overlay US 2.5 Matthew Mar 17 Ability to click on the domains in the details to be sent to graph of that domain, similar to results page US 2.5 Matthew Mar 17 Deploy frontend page to client's web server DEVOPS Damian Mar 18 Improve tree UX US 2.6 Everyone Mar 18 Improve visual design of the tree US 2.6 Everyone Mar 18 Delineate \u201cfocus\u201d node in a different color from other nodes US 2.6 Everyone Mar 18","title":"Tasks"},{"location":"ProjectManagement/#sprint-5","text":"Due: April 4","title":"Sprint 5"},{"location":"ProjectManagement/#user-stories_3","text":"User Story Story Points US 4.1 Mobile phone 8 Homepage visual upgrade 5 End-to-end testing 5 Unit testing 3 Component testing 3 Quality of life updates and general visual upgrades 3 User testing, bug discovery and handling 3 Wordnet graph support (if backend is up) 5 Estimated sprint velocity: 35","title":"User stories"},{"location":"ProjectManagement/#tasks_4","text":"Task Related US Assigned To Due Date Test website on a phone, assess usability and make a report US 4.1 Sooraj Mar 25 Suggest fixes and assign everyone tasks to make the website more responsive US 4.1 Saba Apr 1 Make homepage look less bland by adding user guide and/or expanding the search to entire page UI Matt Mar 25 Test user searching and entering tree page TEST Damian Apr 1 Test user interacting everything in tree page TEST Michael Mar 25 Test user interacting with everything in results page TEST Sooraj Mar 25 Write unit tests for API call functions TEST Saba Apr 1 Write unit tests for util functions TEST Matt Mar 25 Write unit tests for general functions TEST Damian Apr 1 Write component tests for all componentes TEST Michael Mar 25 Increase spacing between nodes in tree UI Jaden Apr 1 Make cree word generation button be center of the node list UI Sooraj Mar 25 Choose better color for level coloring for tree UI Saba Apr 1 Have consistent coloring for the entire website UI Matt Mar 25 Handle graphs page sometimes blowing up BUG Damian Mar 25 Write API functions for wordnet WN Matt Mar 25 Modify tree to work for wordnet API WN Jaden Apr 1","title":"Tasks"},{"location":"ProjectRequirements/","text":"Project Requirements Executive Summary The vocabulary explorer is a way to explore information based on semantic class, or general meaning group. It will be based off of RapidWords or WordNet, which will be decided by the client closer to the time of development. The explorer allows users to expand or collapse different semantic classes in order to see which word(s) fall under that category. It will link to itw\u00eawina in order to show paradigms when appropriate. Users will primarily be linguists and language learners. The explorer will present itself as an interactive graph with nodes that users can click on to expand a section further and gain more information. Graph nodes will be grouped based on semantic class and get more specific as the user clicks through. Each node will also display the word(s) we have in our dictionary that belong to that semantic class. Definitions can be linked at the word-level and direct the user to itw\u00eawina. Project Glossary Existing Itw\u00eawina glossary English Mode - The display mode where English is used for the underlying structure of the tree. There may be nodes for which no Cree word exists included, linking Cree nodes. Cree Mode - The display mode where only Cree words will be displayed in the tree. Since the structure of the tree is still mapped onto English, these English nodes will be skipped over when displaying the tree. RapidWords - A web-based tool for text summarization and keyword extraction. The website offers a user-friendly interface and allows users to upload documents or paste text directly into the website for summarization. WordNet - A lexical database for the English language, developed by Princeton University. It organizes words into sets of synonyms and organizes them into semantic hierarchies, allowing for a better understanding of how words are related semantically. The website provides a user-friendly interface for accessing and exploring the WordNet database, allowing users to search for words and their definitions, synonyms, and related concepts. Itw\u00eawina - A web-based platform for learning Cree, an indigenous language of Canada. The platform offers interactive lessons and exercises to help users learn the basics of Cree, including vocabulary, grammar, and pronunciation. It also features a variety of resources, including audio recordings, to help users improve their listening and speaking skills in the language. Hyponym - A word of more specific meaning than a general term applicable to it. Hypernym - A word with a broad meaning that more specific words fall under Breadcrumb - A small text path, indicating where the user is on the site Tag - A multicharacter symbol that represents a linguistic feature. Semantic Ontology - An ecosystem of words relating to each other based on their meaning. Tree - A tree is a hierarchical data structure defined as a collection of nodes. User Stories 1. EPIC - Search As a user, I want to be able to search for a word. [1.1] Querying (3pts) As a user, I want to be sent to a results page ranked by relevance to my search query. Acceptance Tests User can search results are relevant to the searched term User can search results include a definition of each term [1.2] Navigate to tree (5pts) As a user, I want to click on a search result and it takes me to a tree of the word. Acceptance Tests View Cree mode tree View English mode tree View RapidWords View Semantic Domains 2. EPIC - Tree interactions As a user, I want to be able to explore the Cree language in the form of a tree. [2.1] Expand hypernyms (3pts) As a user, for a given node, if I click on the \u2018+\u2019 symbol I should see a list of hypernyms. Acceptance Tests Seeing all hypernyms without any being missed Functional checkbox beside each item Hypernyms of sister words should not be displayed [2.2] Expand hyponyms (3pts) As a user, for a given node, if I click on the \u2018-\u2019 symbol I should see a list of hyponyms. Acceptance Tests Seeing all hyponyms without any being missed Functional checkbox beside each item Hyponyms of sister words should not be displayed [2.3] Select from hypernyms/hyponyms (5pts) As a user, I want to select words from the list of hypernyms/hyponyms and click done and see my selected terms displayed on the tree. Acceptance Tests Selection and deselection need to be tracked Only selected words should be displayed in the tree [2.4] Moving around tree (5pts) As a user, I want to move around the tree. Acceptance Tests Button for zooming in/out zooms in and out by a certain amount Zooming in/out capped after a certain amount User should be able to freely move around the tree by holding right click and dragging A focus button need to included so user can reset view back to center of tree User should not be allowed to move too far away from the tree [2.5] See node details (5pts) As a user, I want to be able to select/click on a node in the graph, to see details about that word. Acceptance Tests As a user, I want to see the synonyms of the word in the details. As a user, I want to see the definition of the word in the details. As a user, I want to have a hyperlink to itw\u00eawina, the plains Cree dictionary [2.6] Node colors (2pts) As a user, I want to see the different levels of the tree in different colors. Acceptance Tests Make sure colors are easy on the eyes of user Make sure colors used are different for each level Make sure text on nodes are visible with color used [2.7] Breadcrumb navigation (5pts) As a user, I want to have a breadcrumb above the tree, so I can keep a history of my actions. Acceptance Tests Clicking on any item on the breadcrumb navigates you to that node Clicking on a previous node removes all subsequent nodes from the breadcrumb Clicking on the node you are currently on should do nothing [2.8] Tree modes (5pts) As a user, I want to be able to view the tree in \u201cEnglish mode\u201d or \u201cCree mode\u201d. Acceptance Tests English mode shows the tree in english mode Cree mode shows the tree in cree mode [2.9] Get root node (8pts) As a user, I want to be able to \u201cjump\u201d to the root node of a word. Acceptance Tests Jumping to root transition should be as smooth as possible Jumping to root should not take too long for user Jumping to root should not crash the site [2.10] Default tree (5pts) As a user, I want to be able to explore the tree starting from the highest classification level on a default homepage. Acceptance Tests The site homepage should display a tree with the highest level semantic classifications (e.g. \u201centity\u201d) 3. EPIC - Filtering I want to explore related words by selecting tags [3.1] Filter search results (3pts) As a user, I want to be able to filter results by tags when I am searching. Acceptance Tests Users can filter search results to nouns, verbs, etc. [3.2] Filter node list (3pts) As a user, I want be able to filter the list of related nodes by tags when I am selecting nodes to add to the tree. Acceptance Tests Users can filter related nodes by selecting tags like nouns, verbs, etc. [3.3] Search node list (3pts) As a user, I want to be able to search the list of related nodes when I am selecting nodes to add to the tree. Acceptance Tests Users can filter related nodes by typing text into the list\u2019s search bar 4. EPIC - Platforms [4.1] Mobile phone (8pts) As a user, I want to view the website on my mobile phone. Acceptance Tests Users can access all functionalities of the site on a phone. [4.2] Laptop (3pts) As a user, I want to view the website on my laptop. Acceptance Tests Users can access all functionalities of the site on a laptop. [4.3] Tablet (5pts) As a user, I want to view the website on my tablet. Acceptance Tests Users can access all functionalities of the site on a tablet. 5. EPIC - Exporting data [5.1] Export CSV (5pts) As a user, I want to export the data that I have explored as a CSV file Acceptance Tests Users can click a button that opens the raw data of the tree in a new tab. Users can click a button that downloads the CSV of the tree. MoSCoW Must Have 1.1. As a user, I want to be sent to a results page ranked by relevance to my search query. 1.2. As a user, I want to click on a search result and it takes me to a graph of the word. 2.1. As a user, for a given node, if I click on the \u2018+\u2019 symbol I should see a list of hypernyms. 2.2. As a user, for a given node, if I click on the \u2018-\u2019 symbol I should see a list of hyponyms. 2.3. As a user, I want to select words from the list of hypernyms/hyponyms and click done and see my selected terms displayed on the tree. 2.4. As a user, I want to move around the tree. 2.5. As a user, I want to be able to select/click on a node in the graph, to see details about that word. 4.1. As a user, I want to view the website on my mobile phone. 4.2. As a user, I want to view the website on my laptop. 4.3. As a user, I want to view the website on my tablet. Should Have 2.6. As a user, I want to see the different levels of the tree in different colors. 2.8. As a user, I want to be able to view the tree in \u201cEnglish mode\u201d or \u201cCree mode\u201d. 3.1. As a user, I want to be able to filter results by tags when I am searching. 3.3. As a user, I want to be able to search the list of related nodes when I am selecting nodes to add to the tree. Could Have 2.7. As a user, I want to have a breadcrumb above the tree, so I can keep a history of my actions. 2.10. As a user, I want to be able to explore the tree starting from the highest classification level on a default homepage. 3.2. As a user, I want to be able to filter the list of related nodes by tags when I am selecting nodes to add to the tree. 5.1. As a user, I want to export the data that I have explored as a CSV file or copy pasteable format. Would like But Won\u2019t Get 2.9. As a user, I want to be able to \u201cjump\u201d to the root node of a word. Similar Products RapidWords A list of nearly 1800 semantic domains A tool for collecting the words of a language and developing a dictionary WordNet A large lexical database of English Nouns, verbs, adjectives and adverbs are grouped into sets of cognitive synonyms (synsets), each expressing a distinct concept Itw\u00eawina A Plains Cree Dictionary Open-source Projects UAlbertaALTLab 21st century tools for Indigenous languages User can search English and Cree words User can get information and pronunciation for each words. RapidWords A web-based tool for text summarization and keyword extraction. The website offers a user-friendly interface and allows users to upload documents or paste text directly into the website for summarization. WordNet A lexical database for the English language, developed by Princeton University. It organizes words into sets of synonyms and organizes them into semantic hierarchies, allowing for a better understanding of how words are related semantically. The website provides a user-friendly interface for accessing and exploring the WordNet database, allowing users to search for words and their definitions, synonyms, and related concepts. Itw\u00eawina A web-based platform for learning Cree, an indigenous language of Canada. The platform offers interactive lessons and exercises to help users learn the basics of Cree, including vocabulary, grammar, and pronunciation. It also features a variety of resources, including audio recordings, to help users improve their listening and speaking skills in the language. Technical Resources Frontend: React.js + D3.js React JS documentation D3 documentation Backend: Django + SQLite3 Django Documentation SQLite3 Documentation Deployment: Docker + NGINX Docker Documentation NGINX Documentation","title":"Project Requirements"},{"location":"ProjectRequirements/#project-requirements","text":"","title":"Project Requirements"},{"location":"ProjectRequirements/#executive-summary","text":"The vocabulary explorer is a way to explore information based on semantic class, or general meaning group. It will be based off of RapidWords or WordNet, which will be decided by the client closer to the time of development. The explorer allows users to expand or collapse different semantic classes in order to see which word(s) fall under that category. It will link to itw\u00eawina in order to show paradigms when appropriate. Users will primarily be linguists and language learners. The explorer will present itself as an interactive graph with nodes that users can click on to expand a section further and gain more information. Graph nodes will be grouped based on semantic class and get more specific as the user clicks through. Each node will also display the word(s) we have in our dictionary that belong to that semantic class. Definitions can be linked at the word-level and direct the user to itw\u00eawina.","title":"Executive Summary"},{"location":"ProjectRequirements/#project-glossary","text":"","title":"Project Glossary"},{"location":"ProjectRequirements/#existing-itwewina-glossary","text":"English Mode - The display mode where English is used for the underlying structure of the tree. There may be nodes for which no Cree word exists included, linking Cree nodes. Cree Mode - The display mode where only Cree words will be displayed in the tree. Since the structure of the tree is still mapped onto English, these English nodes will be skipped over when displaying the tree. RapidWords - A web-based tool for text summarization and keyword extraction. The website offers a user-friendly interface and allows users to upload documents or paste text directly into the website for summarization. WordNet - A lexical database for the English language, developed by Princeton University. It organizes words into sets of synonyms and organizes them into semantic hierarchies, allowing for a better understanding of how words are related semantically. The website provides a user-friendly interface for accessing and exploring the WordNet database, allowing users to search for words and their definitions, synonyms, and related concepts. Itw\u00eawina - A web-based platform for learning Cree, an indigenous language of Canada. The platform offers interactive lessons and exercises to help users learn the basics of Cree, including vocabulary, grammar, and pronunciation. It also features a variety of resources, including audio recordings, to help users improve their listening and speaking skills in the language. Hyponym - A word of more specific meaning than a general term applicable to it. Hypernym - A word with a broad meaning that more specific words fall under Breadcrumb - A small text path, indicating where the user is on the site Tag - A multicharacter symbol that represents a linguistic feature. Semantic Ontology - An ecosystem of words relating to each other based on their meaning. Tree - A tree is a hierarchical data structure defined as a collection of nodes.","title":"Existing Itw\u00eawina glossary"},{"location":"ProjectRequirements/#user-stories","text":"","title":"User Stories"},{"location":"ProjectRequirements/#1-epic-search","text":"As a user, I want to be able to search for a word.","title":"1. EPIC - Search"},{"location":"ProjectRequirements/#11-querying-3pts","text":"As a user, I want to be sent to a results page ranked by relevance to my search query. Acceptance Tests User can search results are relevant to the searched term User can search results include a definition of each term","title":"[1.1]  Querying  (3pts)"},{"location":"ProjectRequirements/#12-navigate-to-tree-5pts","text":"As a user, I want to click on a search result and it takes me to a tree of the word. Acceptance Tests View Cree mode tree View English mode tree View RapidWords View Semantic Domains","title":"[1.2]  Navigate to tree (5pts)"},{"location":"ProjectRequirements/#2-epic-tree-interactions","text":"As a user, I want to be able to explore the Cree language in the form of a tree.","title":"2. EPIC - Tree interactions"},{"location":"ProjectRequirements/#21-expand-hypernyms-3pts","text":"As a user, for a given node, if I click on the \u2018+\u2019 symbol I should see a list of hypernyms. Acceptance Tests Seeing all hypernyms without any being missed Functional checkbox beside each item Hypernyms of sister words should not be displayed","title":"[2.1]  Expand hypernyms (3pts)"},{"location":"ProjectRequirements/#22-expand-hyponyms-3pts","text":"As a user, for a given node, if I click on the \u2018-\u2019 symbol I should see a list of hyponyms. Acceptance Tests Seeing all hyponyms without any being missed Functional checkbox beside each item Hyponyms of sister words should not be displayed","title":"[2.2]  Expand hyponyms (3pts)"},{"location":"ProjectRequirements/#23-select-from-hypernymshyponyms-5pts","text":"As a user, I want to select words from the list of hypernyms/hyponyms and click done and see my selected terms displayed on the tree. Acceptance Tests Selection and deselection need to be tracked Only selected words should be displayed in the tree","title":"[2.3]  Select from hypernyms/hyponyms (5pts)"},{"location":"ProjectRequirements/#24-moving-around-tree-5pts","text":"As a user, I want to move around the tree. Acceptance Tests Button for zooming in/out zooms in and out by a certain amount Zooming in/out capped after a certain amount User should be able to freely move around the tree by holding right click and dragging A focus button need to included so user can reset view back to center of tree User should not be allowed to move too far away from the tree","title":"[2.4]  Moving around tree (5pts)"},{"location":"ProjectRequirements/#25-see-node-details-5pts","text":"As a user, I want to be able to select/click on a node in the graph, to see details about that word. Acceptance Tests As a user, I want to see the synonyms of the word in the details. As a user, I want to see the definition of the word in the details. As a user, I want to have a hyperlink to itw\u00eawina, the plains Cree dictionary","title":"[2.5]  See node details (5pts)"},{"location":"ProjectRequirements/#26-node-colors-2pts","text":"As a user, I want to see the different levels of the tree in different colors. Acceptance Tests Make sure colors are easy on the eyes of user Make sure colors used are different for each level Make sure text on nodes are visible with color used","title":"[2.6]  Node colors (2pts)"},{"location":"ProjectRequirements/#27-breadcrumb-navigation-5pts","text":"As a user, I want to have a breadcrumb above the tree, so I can keep a history of my actions. Acceptance Tests Clicking on any item on the breadcrumb navigates you to that node Clicking on a previous node removes all subsequent nodes from the breadcrumb Clicking on the node you are currently on should do nothing","title":"[2.7]  Breadcrumb navigation (5pts)"},{"location":"ProjectRequirements/#28-tree-modes-5pts","text":"As a user, I want to be able to view the tree in \u201cEnglish mode\u201d or \u201cCree mode\u201d. Acceptance Tests English mode shows the tree in english mode Cree mode shows the tree in cree mode","title":"[2.8]  Tree modes (5pts)"},{"location":"ProjectRequirements/#29-get-root-node-8pts","text":"As a user, I want to be able to \u201cjump\u201d to the root node of a word. Acceptance Tests Jumping to root transition should be as smooth as possible Jumping to root should not take too long for user Jumping to root should not crash the site","title":"[2.9]  Get root node (8pts)"},{"location":"ProjectRequirements/#210-default-tree-5pts","text":"As a user, I want to be able to explore the tree starting from the highest classification level on a default homepage. Acceptance Tests The site homepage should display a tree with the highest level semantic classifications (e.g. \u201centity\u201d)","title":"[2.10] Default tree (5pts)"},{"location":"ProjectRequirements/#3-epic-filtering","text":"I want to explore related words by selecting tags","title":"3. EPIC - Filtering"},{"location":"ProjectRequirements/#31-filter-search-results-3pts","text":"As a user, I want to be able to filter results by tags when I am searching. Acceptance Tests Users can filter search results to nouns, verbs, etc.","title":"[3.1]  Filter search results (3pts)"},{"location":"ProjectRequirements/#32-filter-node-list-3pts","text":"As a user, I want be able to filter the list of related nodes by tags when I am selecting nodes to add to the tree. Acceptance Tests Users can filter related nodes by selecting tags like nouns, verbs, etc.","title":"[3.2]  Filter node list (3pts)"},{"location":"ProjectRequirements/#33-search-node-list-3pts","text":"As a user, I want to be able to search the list of related nodes when I am selecting nodes to add to the tree. Acceptance Tests Users can filter related nodes by typing text into the list\u2019s search bar","title":"[3.3]  Search node list (3pts)"},{"location":"ProjectRequirements/#4-epic-platforms","text":"","title":"4. EPIC - Platforms"},{"location":"ProjectRequirements/#41-mobile-phone-8pts","text":"As a user, I want to view the website on my mobile phone. Acceptance Tests Users can access all functionalities of the site on a phone.","title":"[4.1]  Mobile phone (8pts)"},{"location":"ProjectRequirements/#42-laptop-3pts","text":"As a user, I want to view the website on my laptop. Acceptance Tests Users can access all functionalities of the site on a laptop.","title":"[4.2]  Laptop (3pts)"},{"location":"ProjectRequirements/#43-tablet-5pts","text":"As a user, I want to view the website on my tablet. Acceptance Tests Users can access all functionalities of the site on a tablet.","title":"[4.3]  Tablet (5pts)"},{"location":"ProjectRequirements/#5-epic-exporting-data","text":"","title":"5. EPIC - Exporting data"},{"location":"ProjectRequirements/#51-export-csv-5pts","text":"As a user, I want to export the data that I have explored as a CSV file Acceptance Tests Users can click a button that opens the raw data of the tree in a new tab. Users can click a button that downloads the CSV of the tree.","title":"[5.1]  Export CSV (5pts)"},{"location":"ProjectRequirements/#moscow","text":"","title":"MoSCoW"},{"location":"ProjectRequirements/#must-have","text":"1.1. As a user, I want to be sent to a results page ranked by relevance to my search query. 1.2. As a user, I want to click on a search result and it takes me to a graph of the word. 2.1. As a user, for a given node, if I click on the \u2018+\u2019 symbol I should see a list of hypernyms. 2.2. As a user, for a given node, if I click on the \u2018-\u2019 symbol I should see a list of hyponyms. 2.3. As a user, I want to select words from the list of hypernyms/hyponyms and click done and see my selected terms displayed on the tree. 2.4. As a user, I want to move around the tree. 2.5. As a user, I want to be able to select/click on a node in the graph, to see details about that word. 4.1. As a user, I want to view the website on my mobile phone. 4.2. As a user, I want to view the website on my laptop. 4.3. As a user, I want to view the website on my tablet.","title":"Must Have"},{"location":"ProjectRequirements/#should-have","text":"2.6. As a user, I want to see the different levels of the tree in different colors. 2.8. As a user, I want to be able to view the tree in \u201cEnglish mode\u201d or \u201cCree mode\u201d. 3.1. As a user, I want to be able to filter results by tags when I am searching. 3.3. As a user, I want to be able to search the list of related nodes when I am selecting nodes to add to the tree.","title":"Should Have"},{"location":"ProjectRequirements/#could-have","text":"2.7. As a user, I want to have a breadcrumb above the tree, so I can keep a history of my actions. 2.10. As a user, I want to be able to explore the tree starting from the highest classification level on a default homepage. 3.2. As a user, I want to be able to filter the list of related nodes by tags when I am selecting nodes to add to the tree. 5.1. As a user, I want to export the data that I have explored as a CSV file or copy pasteable format.","title":"Could Have"},{"location":"ProjectRequirements/#would-like-but-wont-get","text":"2.9. As a user, I want to be able to \u201cjump\u201d to the root node of a word.","title":"Would like But Won\u2019t Get"},{"location":"ProjectRequirements/#similar-products","text":"RapidWords A list of nearly 1800 semantic domains A tool for collecting the words of a language and developing a dictionary WordNet A large lexical database of English Nouns, verbs, adjectives and adverbs are grouped into sets of cognitive synonyms (synsets), each expressing a distinct concept Itw\u00eawina A Plains Cree Dictionary","title":"Similar Products"},{"location":"ProjectRequirements/#open-source-projects","text":"","title":"Open-source Projects"},{"location":"ProjectRequirements/#ualbertaaltlab","text":"21st century tools for Indigenous languages User can search English and Cree words User can get information and pronunciation for each words.","title":"UAlbertaALTLab"},{"location":"ProjectRequirements/#rapidwords","text":"A web-based tool for text summarization and keyword extraction. The website offers a user-friendly interface and allows users to upload documents or paste text directly into the website for summarization.","title":"RapidWords"},{"location":"ProjectRequirements/#wordnet","text":"A lexical database for the English language, developed by Princeton University. It organizes words into sets of synonyms and organizes them into semantic hierarchies, allowing for a better understanding of how words are related semantically. The website provides a user-friendly interface for accessing and exploring the WordNet database, allowing users to search for words and their definitions, synonyms, and related concepts.","title":"WordNet"},{"location":"ProjectRequirements/#itwewina","text":"A web-based platform for learning Cree, an indigenous language of Canada. The platform offers interactive lessons and exercises to help users learn the basics of Cree, including vocabulary, grammar, and pronunciation. It also features a variety of resources, including audio recordings, to help users improve their listening and speaking skills in the language.","title":"Itw\u00eawina"},{"location":"ProjectRequirements/#technical-resources","text":"","title":"Technical Resources"},{"location":"ProjectRequirements/#frontend-reactjs-d3js","text":"React JS documentation D3 documentation","title":"Frontend: React.js + D3.js"},{"location":"ProjectRequirements/#backend-django-sqlite3","text":"Django Documentation SQLite3 Documentation","title":"Backend: Django + SQLite3"},{"location":"ProjectRequirements/#deployment-docker-nginx","text":"Docker Documentation NGINX Documentation","title":"Deployment: Docker + NGINX"},{"location":"SoftwareDesign/","text":"Software Design Architecture Diagram This is a diagram of the client's full architecture. However, for this project creating the Vocabulary Explorer, we will only be interacting with the presentation and business layers. UML Diagram UML Class Diagram UML Components Diagram Low-fidelity User Interfaces and Storyboard Sequence Interaction Scenarios API Endpoints GET https://api.itwewina.altlab.dev/api/search/ Query Parameters: - name (ex: atim) - rw_index (ex: 6.3.1.5.1) - rw_domain (ex: dog) GET https://api.itwewina.altlab.dev/api/rapidwords/ Query Parameters: - q (ex: 1.2.2) Detailed endpoint documentation made by ALTLab can be found here .","title":"Software Design"},{"location":"SoftwareDesign/#software-design","text":"","title":"Software Design"},{"location":"SoftwareDesign/#architecture-diagram","text":"This is a diagram of the client's full architecture. However, for this project creating the Vocabulary Explorer, we will only be interacting with the presentation and business layers.","title":"Architecture Diagram"},{"location":"SoftwareDesign/#uml-diagram","text":"","title":"UML Diagram"},{"location":"SoftwareDesign/#uml-class-diagram","text":"","title":"UML Class Diagram"},{"location":"SoftwareDesign/#uml-components-diagram","text":"","title":"UML Components Diagram"},{"location":"SoftwareDesign/#low-fidelity-user-interfaces-and-storyboard-sequence","text":"","title":"Low-fidelity User Interfaces and Storyboard Sequence"},{"location":"SoftwareDesign/#interaction-scenarios","text":"","title":"Interaction Scenarios"},{"location":"SoftwareDesign/#api-endpoints","text":"GET https://api.itwewina.altlab.dev/api/search/ Query Parameters: - name (ex: atim) - rw_index (ex: 6.3.1.5.1) - rw_domain (ex: dog) GET https://api.itwewina.altlab.dev/api/rapidwords/ Query Parameters: - q (ex: 1.2.2) Detailed endpoint documentation made by ALTLab can be found here .","title":"API Endpoints"},{"location":"Teamwork/","text":"Teamwork Team Canvas Belbin Roles Member Name Preferred Roles Manageable Roles Least Preferred Roles Ke Li IMP ME SH CF PL RI CO SP TW Sooraj Arakkal CF IMP SP CO PL SH ME RI TW Matthew Shocrylas IMP ME SP CF PL TW CO RI SH Jaden Huang CF CO PL IMP SP TW ME RI SH Yu Liu CO ME TW CF IMP RF PL SH SP Saba Gul IMP ME TW CO PL SP CF RI SH Thinking Roles PL (Plant) Tends to be highly creative and good at solving problems in unconventional ways. Jaden Huang (preferred) Ke Li (manageable) Sooraj Arakkal (manageable) Matthew Shocrylas (manageable) ME (Monitor Evaluator) Provides a logical eye, making impartial judgements where required and weighs up the team's options in a dispassionate way. Ke Li (preferred) Matthew Shocrylas (preferred) Yu Liu (preferred) Saba Gul (preferred) SP (Specialist) Brings in-depth knowledge of a key area to the team. Sooraj Arakkal (preferred) Matthew Shocrylas (preferred) Jaden Huang (manageable) Action Roles SH (Shaper) Provides the necessary drive to ensure that the team keeps moving and does not lose focus or momentum. Ke Li (preferred) Sooraj Arakkal (manageable) IMP (Implementer) Needed to plan a workable strategy and carry it out as efficiently as possible. Ke Li (preferred) Sooraj Arakkal (preferred) Matthew Shocrylas (preferred) Saba Gul (preferred) CF (Completer Finisher) Most effectively used at the end of tasks to polish and scrutinise the work for errors, subjecting it to the highest standards of quality control. Sooraj Arakkal (preferred) Jaden Huang (preferred) People Roles RI (Resource Investigator) Uses their inquisitive nature to find ideas to bring back to the team. Ke Li (manageable) TW (Teamworker) Helps the team to gel, using their versatility to identify the work required and complete it on behalf of the team. Yu Liu (preferred) Saba Gul (preferred) CO (Co-ordinator) Needed to focus on the team's objectives, draw out team members and delegate work appropriately. Jaden Huang (preferred) Yu Liu (preferred) Sooraj Arakkal (manageable) Saba Gul (manageable) Scrum Roles Sprint 1 Product Owner: Matthew Shocrylas Scrum Master: Sooraj Arakkal Sprint 2 Product Owner: Matthew Shocrylas Scrum Master: Sooraj Arakkal Sprint 3 Product Owner: Matthew Shocrylas Scrum Master: Sooraj Arakkal Sprint 4 Product Owner: Matthew Shocrylas Scrum Master: Sooraj Arakkal Sprint 5 Product Owner: Matthew Shocrylas & Saba Gul Scrum Master: Sooraj Arakkal Meeting Minutes Hosted on Google Docs: Client Meeting Minutes & Internal Meeting Minutes","title":"Teamwork"},{"location":"Teamwork/#teamwork","text":"","title":"Teamwork"},{"location":"Teamwork/#team-canvas","text":"","title":"Team Canvas"},{"location":"Teamwork/#belbin-roles","text":"Member Name Preferred Roles Manageable Roles Least Preferred Roles Ke Li IMP ME SH CF PL RI CO SP TW Sooraj Arakkal CF IMP SP CO PL SH ME RI TW Matthew Shocrylas IMP ME SP CF PL TW CO RI SH Jaden Huang CF CO PL IMP SP TW ME RI SH Yu Liu CO ME TW CF IMP RF PL SH SP Saba Gul IMP ME TW CO PL SP CF RI SH","title":"Belbin Roles"},{"location":"Teamwork/#thinking-roles","text":"","title":"Thinking Roles"},{"location":"Teamwork/#pl-plant","text":"Tends to be highly creative and good at solving problems in unconventional ways. Jaden Huang (preferred) Ke Li (manageable) Sooraj Arakkal (manageable) Matthew Shocrylas (manageable)","title":"PL (Plant)"},{"location":"Teamwork/#me-monitor-evaluator","text":"Provides a logical eye, making impartial judgements where required and weighs up the team's options in a dispassionate way. Ke Li (preferred) Matthew Shocrylas (preferred) Yu Liu (preferred) Saba Gul (preferred)","title":"ME (Monitor Evaluator)"},{"location":"Teamwork/#sp-specialist","text":"Brings in-depth knowledge of a key area to the team. Sooraj Arakkal (preferred) Matthew Shocrylas (preferred) Jaden Huang (manageable)","title":"SP (Specialist)"},{"location":"Teamwork/#action-roles","text":"","title":"Action Roles"},{"location":"Teamwork/#sh-shaper","text":"Provides the necessary drive to ensure that the team keeps moving and does not lose focus or momentum. Ke Li (preferred) Sooraj Arakkal (manageable)","title":"SH (Shaper)"},{"location":"Teamwork/#imp-implementer","text":"Needed to plan a workable strategy and carry it out as efficiently as possible. Ke Li (preferred) Sooraj Arakkal (preferred) Matthew Shocrylas (preferred) Saba Gul (preferred)","title":"IMP (Implementer)"},{"location":"Teamwork/#cf-completer-finisher","text":"Most effectively used at the end of tasks to polish and scrutinise the work for errors, subjecting it to the highest standards of quality control. Sooraj Arakkal (preferred) Jaden Huang (preferred)","title":"CF (Completer Finisher)"},{"location":"Teamwork/#people-roles","text":"","title":"People Roles"},{"location":"Teamwork/#ri-resource-investigator","text":"Uses their inquisitive nature to find ideas to bring back to the team. Ke Li (manageable)","title":"RI (Resource Investigator)"},{"location":"Teamwork/#tw-teamworker","text":"Helps the team to gel, using their versatility to identify the work required and complete it on behalf of the team. Yu Liu (preferred) Saba Gul (preferred)","title":"TW (Teamworker)"},{"location":"Teamwork/#co-co-ordinator","text":"Needed to focus on the team's objectives, draw out team members and delegate work appropriately. Jaden Huang (preferred) Yu Liu (preferred) Sooraj Arakkal (manageable) Saba Gul (manageable)","title":"CO (Co-ordinator)"},{"location":"Teamwork/#scrum-roles","text":"","title":"Scrum Roles"},{"location":"Teamwork/#sprint-1","text":"Product Owner: Matthew Shocrylas Scrum Master: Sooraj Arakkal","title":"Sprint 1"},{"location":"Teamwork/#sprint-2","text":"Product Owner: Matthew Shocrylas Scrum Master: Sooraj Arakkal","title":"Sprint 2"},{"location":"Teamwork/#sprint-3","text":"Product Owner: Matthew Shocrylas Scrum Master: Sooraj Arakkal","title":"Sprint 3"},{"location":"Teamwork/#sprint-4","text":"Product Owner: Matthew Shocrylas Scrum Master: Sooraj Arakkal","title":"Sprint 4"},{"location":"Teamwork/#sprint-5","text":"Product Owner: Matthew Shocrylas & Saba Gul Scrum Master: Sooraj Arakkal","title":"Sprint 5"},{"location":"Teamwork/#meeting-minutes","text":"Hosted on Google Docs: Client Meeting Minutes & Internal Meeting Minutes","title":"Meeting Minutes"}]}